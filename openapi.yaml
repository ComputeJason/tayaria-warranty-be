openapi: 3.0.3
info:
  title: Tayaria Tyre Assist API
  version: "1.0"
  description: API for warranty and claim management (retailer, customer, master admin)
servers:
  - url: http://localhost:8080

paths:
  /admin/login:
    post:
      summary: Master admin login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminLoginRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminLoginResponse'
        '401':
          description: Invalid credentials

  /retailer/login:
    post:
      summary: Retailer login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RetailerLoginRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetailerLoginResponse'
        '401':
          description: Invalid credentials

  /user/warranty:
    post:
      summary: Register a new warranty
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWarrantyRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Warranty'
        '400':
          description: Bad request - validation error
        '500':
          description: Internal server error

  /user/warranties/car-plate/{carPlate}:
    get:
      summary: Get warranties by car plate
      parameters:
        - in: path
          name: carPlate
          schema:
            type: string
          required: true
          description: Car plate to search for
      responses:
        '200':
          description: List of warranties
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Warranty'
        '500':
          description: Internal server error

  /user/warranties/valid/{carPlate}:
    get:
      summary: Check if car plate has a valid warranty
      parameters:
        - in: path
          name: carPlate
          schema:
            type: string
          required: true
          description: Car plate to search for
      responses:
        '200':
          description: Validity and warranty info
          content:
            application/json:
              schema:
                type: object
                properties:
                  valid:
                    type: boolean
                  warranty:
                    $ref: '#/components/schemas/Warranty'
        '500':
          description: Internal server error

  /user/warranty/receipt/{id}:
    get:
      summary: Get warranty receipt URL
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
          description: Warranty ID
      responses:
        '200':
          description: Receipt URL
          content:
            application/json:
              schema:
                type: object
                properties:
                  receipt_url:
                    type: string
        '404':
          description: Warranty not found
        '500':
          description: Internal server error

  /user/claim:
    post:
      summary: Create a new claim
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateClaimRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Claim'
        '400':
          description: Bad request - validation error
        '404':
          description: Warranty not found
        '500':
          description: Internal server error
    get:
      summary: Get claims with optional filtering
      parameters:
        - in: query
          name: warranty_id
          schema:
            type: string
            format: uuid
          description: Filter by warranty ID
        - in: query
          name: status
          schema:
            type: string
            enum: [unacknowledged, pending, approved, rejected]
          description: Filter by claim status
      responses:
        '200':
          description: List of claims
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Claim'
        '500':
          description: Internal server error

  /user/claim/{id}/tag-warranty:
    post:
      summary: Tag a warranty to a claim
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
          description: Claim ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                warranty_id:
                  type: string
                  format: uuid
      responses:
        '200':
          description: Updated claim
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Claim'
        '400':
          description: Bad request - invalid status or validation error
        '404':
          description: Claim or warranty not found
        '500':
          description: Internal server error

  /user/claim/{id}/change-status:
    post:
      summary: Change claim status
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
          description: Claim ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeClaimStatusRequest'
      responses:
        '200':
          description: Updated claim
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Claim'
        '400':
          description: Bad request - invalid status transition or validation error
        '404':
          description: Claim not found
        '500':
          description: Internal server error

  /user/claim/{id}/close:
    post:
      summary: Close a claim
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
          description: Claim ID
      responses:
        '200':
          description: Claim closed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  claim:
                    $ref: '#/components/schemas/Claim'
        '400':
          description: Bad request - claim cannot be closed
        '404':
          description: Claim not found
        '500':
          description: Internal server error

components:
  schemas:
    AdminLoginRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required: [username, password]
    AdminLoginResponse:
      type: object
      properties:
        token:
          type: string
        admin:
          $ref: '#/components/schemas/Admin'
    Admin:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
        password_hash:
          type: string

    RetailerLoginRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required: [username, password]
    RetailerLoginResponse:
      type: object
      properties:
        token:
          type: string
        shop:
          $ref: '#/components/schemas/Shop'
    Shop:
      type: object
      properties:
        id:
          type: string
        shop_name:
          type: string
        address:
          type: string
        contact:
          type: string
        username:
          type: string
        password_hash:
          type: string

    CreateWarrantyRequest:
      type: object
      properties:
        name:
          type: string
          description: Customer's full name
        phone_number:
          type: string
          description: Customer's phone number
        email:
          type: string
          description: Customer's email address (optional)
        purchase_date:
          type: string
          format: date-time
          description: Date of purchase (ISO 8601 format)
        car_plate:
          type: string
          description: Vehicle registration number
        receipt:
          type: string
          description: URL to the receipt document
      required: [name, phone_number, purchase_date, car_plate, receipt]
    Warranty:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        phone_number:
          type: string
        email:
          type: string
        purchase_date:
          type: string
          format: date-time
        expiry_date:
          type: string
          format: date-time
        car_plate:
          type: string
        receipt:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    CreateClaimRequest:
      type: object
      properties:
        warranty_id:
          type: string
          format: uuid
          description: ID of the warranty this claim is for
        description:
          type: string
          description: Description of the claim issue
      required: [warranty_id, description]
    Claim:
      type: object
      properties:
        id:
          type: string
          format: uuid
        warranty_id:
          type: string
          format: uuid
        description:
          type: string
        status:
          type: string
          enum: [unacknowledged, pending, approved, rejected]
        admin_comment:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    ChangeClaimStatusRequest:
      type: object
      properties:
        status:
          type: string
          enum: [unacknowledged, pending, approved, rejected]
          description: New status for the claim
        admin_comment:
          type: string
          description: Admin comment (required for rejected status)
      required: [status] 